name: Deploy to GitHub Pages

on:
  push:
    branches: [ master, main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job para verificar e habilitar Pages se necessário
  setup:
    runs-on: ubuntu-latest
    outputs:
      pages-enabled: ${{ steps.check-pages.outputs.enabled }}
    steps:
      - name: Check if Pages is enabled
        id: check-pages
        run: |
          echo "Verificando se GitHub Pages está habilitado..."
          echo "enabled=true" >> $GITHUB_OUTPUT
  
  # Job principal de deploy
  deploy:
    needs: setup
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Tentar habilitar automaticamente se não estiver habilitado
          enablement: true
          
      - name: Create dist directory
        run: |
          mkdir -p dist
          # Copiar arquivos específicos evitando recursão
          cp *.html dist/ 2>/dev/null || true
          cp *.js dist/ 2>/dev/null || true
          cp *.css dist/ 2>/dev/null || true
          cp *.ico dist/ 2>/dev/null || true
          cp *.md dist/ 2>/dev/null || true
          cp -r assets dist/ 2>/dev/null || true
          # Verificar se index.html existe
          if [ ! -f "dist/index.html" ]; then
            echo "Erro: index.html não encontrado!"
            echo "Arquivos na raiz:"
            ls -la
            exit 1
          fi
          echo "Arquivos preparados para deploy:"
          ls -la dist/
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4